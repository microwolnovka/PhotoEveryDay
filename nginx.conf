
user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    server {
        listen 80;
       
        
    # Здесь обрабатывается запрос на скачивание файла.
    # урл имеет вид http://example.com/download/-encrypted-file-id-
   # location /download {
    #    set $limit_rate 10k;
    #    #limit_conn lim  1;

    # передаем запрос бэк-енду на расшифровку. В ответе ожидаем хедер X-Accel-Redirect
     #   proxy_pass http://localhost/?domain=$host&path=$request_uri;
      #  proxy_set_header  X-Real-IP  $remote_addr;

       # add_header Content-Length $content_length;
       # add_header Content-Disposition attachment;
    #}

    # В этот локейшн переходим по хедеру X-Accel-Redirect от бэк-енда (см. предыдущий локейшн)
    # Предполагается, что все раздаваемые файлы лежат в папке /storage
    #location /storage {
     #   set $postURI $uri;
     #   set $postIP $remote_addr;
       # set $postHOST $host;

      #  post_action @postDownload;

     #   root /data;
        #internal;
    
    #}

    # по завершению скачивания файла передаем на бэк-енд переменные установленные
    # в предыдущем локейшыне и отданный объем (в байтах)
    #location @postDownload {
    #    proxy_pass http://127.0.0.1/?domain=$postHOST&uri=$postURI;
    #    #proxy_set_header  X-Real-IP  $postIP;
    #    proxy_set_header  BytesSent  $body_bytes_sent;
   # }

     location /upload {
         # auth_basic                 "Restricted Upload";
          #auth_basic_user_file       basic.htpasswd;
          
          #limit_except POST          { deny all; }

          client_body_temp_path      /tmp/;
          client_body_in_file_only   on;
          client_body_buffer_size    128K;
          client_max_body_size       1000M;

          proxy_pass_request_headers on;
          proxy_set_header           X-FILE $request_body_file; 
          proxy_set_body             off;
          proxy_redirect             off;
          proxy_pass                 http://localhost/moth;
    }

     location /moth {
            include fastcgi_params;
                fastcgi_param SCRIPT_FILENAME $fastcgi_script_name;
                fastcgi_pass unix:/tmp/fastcgi_daemon.sock;
            }
    }
	


	include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" $request_body';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    tcp_nopush     on;

    keepalive_timeout  65;

    gzip  on;

   # include /etc/nginx/conf.d/*.conf;
}




#http{
#	server{
#		listen 80;
#
#		location / {
#			include fastcgi_params;
#			fastcgi_param SCRIPT_FILENAME $fastcgi_script_name;
#
#			fastcgi_pass unix:/tmp/fastcgi_daemon.sock;
#		}
#	}	
#	server{
#		listen 8080;
#		root /home/jack/some/NGINX/data/up1/;
#		location / {
#		}
#	}	
#	server{
#	
#		root /home/jack/some/NGINX/data/www/;
#		location / {
#			proxy_pass http://localhost:80;
#		}
#		location ~ \.(gif|jpg|png|bmp) {
#			root /home/jack/some/NGINX/data/images/;
#		}
#	}
#}

